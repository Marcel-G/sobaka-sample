name: "Backend"

on:
  push:
    branches: [master, next, feat/helia]
    paths:
      - 'backend/**'
  pull_request:
    branches: [master, next]
    paths:
      - 'backend/**'

jobs:
  build:
    name: "üß¶ Build"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/webrtc-relay
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          context: backend/webrtc-relay
          tags: rust-relay:latest
          outputs: type=docker,dest=/tmp/rust-relay.tar
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: rust-relay
          path: /tmp/rust-relay.tar

  infrastructure:
    needs:
      - build
    uses: ./.github/workflows/infrastructure.yml

  deploy:
    name: "üèÉ‚Äç‚ôÇÔ∏è Deploy"
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs:
      - build
      - infrastructure
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-1
          role-to-assume: ${{ needs.infrastructure.outputs.deploy_role }}
          role-session-name: DeploySession
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: rust-relay
          path: /tmp
      - name: Tag and upload image to ECR
        env:
          ECR_REPOSITORY: ${{ needs.infrastructure.outputs.ecr_repository_webrtc_relay }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker load --input /tmp/rust-relay.tar
          docker tag rust-relay:latest $ECR_REPOSITORY:$IMAGE_TAG
          docker tag rust-relay:latest $ECR_REPOSITORY:latest
          docker push $ECR_REPOSITORY --all-tags
      - name: Deploy image to EC2
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --instance-id "${{ needs.infrastructure.outputs.instance_id_webrtc_relay }}" \
            --parameters '{
              "executionTimeout":["3600"],
              "commands":[
                "sudo su ec2-user",
                "aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ needs.infrastructure.outputs.ecr_repository_webrtc_relay }}",
                "docker pull ${{ needs.infrastructure.outputs.ecr_repository_webrtc_relay }}",
                "docker stop instance || true",
                "docker run \\",
                  " --rm \\",
                  " --name instance \\",
                  " -p 9090:9090/udp \\",
                  " -p 9091:9091/udp \\",
                  " -v cert:/cert \\",
                  " -d ${{ needs.infrastructure.outputs.ecr_repository_webrtc_relay }}:latest"
            ]}' --region us-east-1

concurrency: 
  group: "${{ github.ref }}-backend"
  cancel-in-progress: true
